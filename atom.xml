<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>guard warm</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-06T05:16:36.283Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>grandwarm</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git使用</title>
    <link href="http://yoursite.com/2019/09/04/git%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/09/04/git使用/</id>
    <published>2019-09-04T15:43:18.000Z</published>
    <updated>2019-09-06T05:16:36.283Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Git版本控制系统"><a href="#Git版本控制系统" class="headerlink" title="Git版本控制系统"></a>Git版本控制系统</h4><ul><li>记录版本信息（记录每一次的修改）</li><li>方便团队相互之间协作，共同开发</li></ul><p>常用版本控制系统</p><ul><li>svn/cvs：集中式版本控制系统</li><li>git：分布式版本控制系统</li></ul><h4 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h4><p>这个网上很常见，自行参考网上教程</p><h4 id="使用GitHub"><a href="#使用GitHub" class="headerlink" title="使用GitHub"></a>使用GitHub</h4><h5 id="目的：托管项目代码"><a href="#目的：托管项目代码" class="headerlink" title="目的：托管项目代码"></a>目的：托管项目代码</h5><p>工作区 -&gt; 暂存区 -&gt; 历史区</p><h5 id="1-Git的全局配置"><a href="#1-Git的全局配置" class="headerlink" title="1.Git的全局配置"></a>1.Git的全局配置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一次安装完成git后，要在全局环境下配置基本信息：我是谁？</span><br><span class="line"><span class="meta">$</span> git config -l查看配置信息</span><br><span class="line"><span class="meta">$</span> git config --global -l查看全局配置信息</span><br><span class="line">配置全局信息，用户名和邮箱</span><br><span class="line"><span class="meta">$</span> git config --global user.name 'xxx'</span><br><span class="line"><span class="meta">$</span> git config --global user.email 'xxx@xx.xx'</span><br></pre></td></tr></table></figure><h5 id="2-创建仓库完成版本控制"><a href="#2-创建仓库完成版本控制" class="headerlink" title="2.创建仓库完成版本控制"></a>2.创建仓库完成版本控制</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">创建本地git仓库</span><br><span class="line"><span class="meta">$</span> git init</span><br><span class="line">会生成一个隐藏文件夹“.git”（这个文件夹很重要，暂存区和历史区以及一些其他数据都在里面存着）</span><br><span class="line"></span><br><span class="line">在本地编写完成代码后（在工作区），把一些文件提交到暂存区</span><br><span class="line"><span class="meta">$</span> git add xxx把某一个文件或者文件夹提交到暂存区</span><br><span class="line"><span class="meta">$</span> git add .|| git add A把当前仓库中所有最新修改的文件都提交到暂存区</span><br><span class="line"><span class="meta">$</span> git status查看当前文件的状态（红色代表工作区，绿色代表暂存区，看不见东西代表所有东西都已提交到历史区）</span><br><span class="line"></span><br><span class="line">把暂存区内容提交到历史区</span><br><span class="line"><span class="meta">$</span> git commit -m'描述信息'</span><br><span class="line">查看历史版本信息（历史记录）</span><br><span class="line"><span class="meta">$</span> git log</span><br><span class="line"><span class="meta">$</span> git reflog包含回滚的信息</span><br></pre></td></tr></table></figure><p><img src="/.com//git5.jpg" alt></p><p><img src="/.com//git4.jpg" alt></p><p><img src="/.com//git3.jpg" alt></p><h4 id><a href="#" class="headerlink" title></a><img src="/.com//git2.jpg" alt></h4><h4 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h4><p>一个网站（开源的代码管理平台），用户注册号，可以在自己账户下创建仓库，用来管理项目的源代码（源代码基于git传到仓库中）</p><p>我们所熟知的插件，类库，框架等都在这个平台上有托管，我们可以下载观看和研究源码等</p><p><strong>settings用户设置</strong></p><ul><li>profile    修改自己的基本信息</li><li>account    作用修改用户名</li><li>security    可以改自己的密码</li><li>emails    私有仓库作为内部团队协作管理的项目</li><li>……</li></ul><p>new  repository -&gt; 填写信息，公私有都免费 -&gt; create repository</p><ul><li>public    公共开源</li><li>private    私有，作为内部团队项目</li></ul><p>settings -&gt; 删除仓库</p><p>​               -&gt; collaborators 设置协助开发人员，需对方同意邀请</p><p>code可以查看历史版本和分支信息</p><h5 id="3-把本地仓库信息提交到远程仓库"><a href="#3-把本地仓库信息提交到远程仓库" class="headerlink" title="3.把本地仓库信息提交到远程仓库"></a>3.把本地仓库信息提交到远程仓库</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">查看本地仓库和哪些远程仓库保持连接</span><br><span class="line"><span class="meta">$</span> git remote -v</span><br><span class="line">让本地仓库和远程仓库创建一个连接origin是随便起的一个名字，但一般都用这个</span><br><span class="line"><span class="meta">$</span> git remote add origin [仓库地址]</span><br><span class="line">解除关联信息</span><br><span class="line"><span class="meta">$</span> git remote rm origin</span><br><span class="line">提交之前最好先拉取</span><br><span class="line"><span class="meta">$</span> git pull origin master</span><br><span class="line">将本地代码提交到远程仓库（第一次需要输入用户名和密码）</span><br><span class="line"><span class="meta">$</span> git push origin master</span><br><span class="line">将远程仓库代码拉取到本地</span><br><span class="line"><span class="meta">$</span> git clone [远程仓库git地址] [别名，默认为仓库名，也可以起一个作为拉取后的文件夹名]</span><br><span class="line">/*</span><br><span class="line"> *真实项目开发流程：</span><br><span class="line"> *1.组长或者负责人先创建中央仓库</span><br><span class="line"> *2.小组成员基于$ git clone 把远程仓库及默认的内容克隆到本地（解决了三个事情：初始化一个</span><br><span class="line"> 本地仓库“git init”，和对应的远程仓库也保持了关联“git remote add”，把远程仓库默认内人拉取到本地</span><br><span class="line"> “git pull”</span><br><span class="line"> *3.每个组员写自己的程序后，基于“git add/git commit”把自己修改的内容存放到历史区，然后通过</span><br><span class="line"> “git pull/git push”把本地信息和远程仓库信息保持同步即可（可能涉及冲突处理）</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p><img src="/.com//git1.jpg" alt></p><h4 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h4><p>node package manger:NODE模块管理工具，根据NPM我们可快速安装、卸载所需要的资源文件</p><p>区NODE官网：下载NODE重启支持版，安装NODE后，NPM也跟着安装了</p><p>基于npm是从<a href>npmjs.com</a>平台下下载安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//在终端中检测安装是否成功，出现版本号即成功了</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ npm install xxx把模块安装在当前项目中（node_modules）</span><br><span class="line">$ npm install xxx -g把模块安装在全局环境中</span><br><span class="line">$ npm i xxx@<span class="number">1.0</span>.<span class="number">0</span>安装指定版本号的模块</span><br><span class="line">$ npm view xx version &gt; xxx.version.json查看某个模块的版本信息（输出到指定json文件中）</span><br><span class="line"></span><br><span class="line">$ npm init -y初始化当前项目的配置依赖清单</span><br><span class="line">$ npm i xxx -save把模块保存在清单生产依赖中</span><br><span class="line">$ npm i xxx --save-dev把模块保存在清单开发依赖中</span><br><span class="line">$ npm install跑环境，按照清单安装所需模块</span><br><span class="line"></span><br><span class="line">$ npm root -g查看全局安装模块的目录</span><br><span class="line">$ npm -uninstall xxx</span><br><span class="line">$ npm -uninstall xxx -g卸载安装过的模块</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Git版本控制系统&quot;&gt;&lt;a href=&quot;#Git版本控制系统&quot; class=&quot;headerlink&quot; title=&quot;Git版本控制系统&quot;&gt;&lt;/a&gt;Git版本控制系统&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;记录版本信息（记录每一次的修改）&lt;/li&gt;
&lt;li&gt;方便团队相互之间协作
      
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>黑马java教程</title>
    <link href="http://yoursite.com/2019/08/16/%E9%BB%91%E9%A9%ACjava%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/08/16/黑马java教程/</id>
    <published>2019-08-16T05:15:33.000Z</published>
    <updated>2019-09-04T15:41:33.484Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="java基础"><a href="#java基础" class="headerlink" title="java基础"></a>java基础</h3><h4 id="入门及环境搭建"><a href="#入门及环境搭建" class="headerlink" title="入门及环境搭建"></a>入门及环境搭建</h4><h5 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h5><p>进入Oracle官网，下载相应版本，最近下载好像都得注册个账号</p><p>下完按到所需目录，一般默认，一直下一步即可，完了设置一下环境变量</p><p>此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;编辑path，把bin目录路径加入</p><p>classpath也可以设置</p><p>在cmd中，输入java -version检查是否安装成功</p><p>javac 文件路径（编译，生成。class文件）</p><p>java 文件名，不加后缀，运行</p><p><strong>IDE选择</strong></p><p>目前比较流行的是eclipse和IDEA，我更喜欢IDEA，熟练了快捷键和各种模板之后会用得很舒服</p><h5 id="语言特点"><a href="#语言特点" class="headerlink" title="语言特点"></a>语言特点</h5><p>通过编译成统一的字节码，不同平台下载对应JVM来实现跨平台</p><p>完全面向对象，简单，高性能，分布式，多线程，健壮</p><p>JDK（用于开发）-&gt;JRE（运行环境）-&gt;JVM(依次包含)</p><p>java SE    标准版，定位于个人计算机用户</p><p>java EE    企业版，定位于服务器端领域</p><p>java ME    微型版，定位于消费电子产品的应用</p><p>越高级语言越容易入门，但要精通还需沉下心来</p><h4 id="数据类型和运算符"><a href="#数据类型和运算符" class="headerlink" title="数据类型和运算符"></a>数据类型和运算符</h4><h5 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h5><p>单行，多行，文档注释</p><h5 id="标识符的命名规则"><a href="#标识符的命名规则" class="headerlink" title="标识符的命名规则"></a>标识符的命名规则</h5><p>虽然不同语言之间会有细微区别，但为了便于编写，感觉大多数语言都推荐采用比较大众的规范</p><p>不可以是java关键字，并且大小写敏感</p><p>类名    大驼峰命名法</p><p>方法和变量    小驼峰命名法</p><p>常量    大写</p><p>数据类型向上隐士转换，向下需要显示加括号强转</p><h5 id="基本数据类型（四类八种）"><a href="#基本数据类型（四类八种）" class="headerlink" title="基本数据类型（四类八种）"></a>基本数据类型（四类八种）</h5><p>byte(1)  boolean(1)  short(2)  char(2)unicode字符集  int()4  float(4)  long(8)  double(8)</p><h5 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h5><p>string，数组，集合ArrayList，Scanner，Random，自定义类型</p><h4 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h4><p>面向对象是一种编程思想，是相当于面向过程的</p><p>面向过程：遇到问题，亲力亲为一步一步解决</p><p>面向对象：遇到一个问题，找具有解决这个问题能力的对象，调用它的方法</p><p>类的格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line"><span class="comment">//构造方法</span></span><br><span class="line"><span class="comment">//成员类名</span></span><br><span class="line"><span class="comment">//成员方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//一个标准的类封装：隐藏细节，对外暴露公共防蚊1方式构造：无参必须有，全参最好有</span></span><br><span class="line"><span class="comment">//类名作为方法参数或返回值时需要传入或返回的应该是该类的对象</span></span><br></pre></td></tr></table></figure><p><img src="/.com//java%E8%BF%9B%E9%98%B6/javase1.JPG" alt></p><h5 id="this关键字"><a href="#this关键字" class="headerlink" title="this关键字"></a>this关键字</h5><p>区分局部变量和成员变量同名的情况</p><p>this的本质：实际上是个对象    谁调用的方法，this指的就是谁</p><p>匿名对象：（可用可不用）    没有名字的对象</p><p>只创建对象，但不用变量接收</p><p>在一些用来传参后续不调用时使用</p><p>特点：匿名对象也是一个对象，具有对象所有功能</p><p>​            每次调用都是一个新的对象，所一每个对象只能使用一次</p><h5 id="super关键字"><a href="#super关键字" class="headerlink" title="super关键字"></a>super关键字</h5><p>区分子类和父类成员同名的情况，但默认优先调用子类</p><h5 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h5><p>继承是两个类之间的关系，子类继承父类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 子类 <span class="keyword">extends</span> 父类</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//继承必须合理人是人他妈生的，妖是妖他妈生的</span></span><br><span class="line"><span class="comment">//继承中的成员抽取了子类中的共性内容</span></span><br><span class="line"><span class="comment">//子类会自动继承父类中所有成员，但private不可访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//继承后成员变量不同时，没有任何问题，相同时优先访问子类</span></span><br><span class="line"><span class="comment">//继承后成员方法不同时，没有任何问题，相同时(子类重写了父类方法时)优先访问子类，但可以通过super.方法名访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//只能单继承，但可以多层继承（直接父类唯一，但可以有多个间接父类）</span></span><br><span class="line"><span class="comment">//多继承的话调用方法时会产生不确定性，同名父类成员不知道该掉哪个</span></span><br></pre></td></tr></table></figure><p>继承大大提高代码重用性</p><p><img src="/.com//java%E8%BF%9B%E9%98%B6/javase3.JPG" alt></p><h4 id="String中的方法（4532）"><a href="#String中的方法（4532）" class="headerlink" title="String中的方法（4532）"></a>String中的方法（4532）</h4><h5 id="判断方法"><a href="#判断方法" class="headerlink" title="判断方法"></a>判断方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(String str)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">equalsIngoreCase</span><span class="params">(String str)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">startsWith</span><span class="params">(String str)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">endsWith</span><span class="params">(String str)</span></span>;</span><br></pre></td></tr></table></figure><h5 id="获取方法"><a href="#获取方法" class="headerlink" title="获取方法"></a>获取方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">length</span><span class="params">(String str)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">charAt</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br><span class="line"><span class="function">String <span class="title">substring</span><span class="params">(<span class="keyword">int</span> startIndex)</span></span>;</span><br><span class="line"><span class="function">String <span class="title">substring</span><span class="params">(<span class="keyword">int</span> startIndex,<span class="keyword">int</span> endIndex)</span></span>;<span class="comment">//左闭右开</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">indexof</span><span class="params">(String subStr)</span></span>;<span class="comment">//少用</span></span><br></pre></td></tr></table></figure><h5 id="转换方法"><a href="#转换方法" class="headerlink" title="转换方法"></a>转换方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">toLowerCase</span><span class="params">()</span>；</span></span><br><span class="line"><span class="function">String <span class="title">toUpperCase</span><span class="params">()</span>；</span></span><br><span class="line"><span class="function"><span class="keyword">char</span>[] <span class="title">toCharArray</span><span class="params">()</span>；</span></span><br></pre></td></tr></table></figure><h5 id="其它方法"><a href="#其它方法" class="headerlink" title="其它方法"></a>其它方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">trim</span><span class="params">()</span></span>;<span class="comment">//去掉两端空格</span></span><br><span class="line">String[] split(String str);<span class="comment">//一某一个字符串来分割字符串</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="流-读写文件"><a href="#流-读写文件" class="headerlink" title="流_读写文件"></a>流_读写文件</h4><p>（输入输出是相对程序而言的）</p><p>文件路径</p><ul><li>绝对路径：以盘符开头</li><li>相对路径：相对当前目录而言</li></ul><p>输出流：数据从java程序到文件中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//FileWriter:文件的字符输出流，写数据(一个字符，一个字符串，一个字符数组)</span></span><br><span class="line">write(<span class="keyword">int</span> ch);<span class="comment">//可以写ascll码值</span></span><br><span class="line">write(<span class="keyword">char</span>[] ch);</span><br><span class="line">write(<span class="keyword">char</span>[] ch,<span class="keyword">int</span> startIndex,<span class="keyword">int</span> len);</span><br><span class="line">write(String s);</span><br><span class="line">write(String s,<span class="keyword">int</span> startIndex,<span class="keyword">int</span> len);</span><br></pre></td></tr></table></figure><p>输入流：数据从文件到java程序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//FileWriter:文件的字符输出流，写数据(一个字符，一个字符串，一个字符数组)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>;<span class="comment">//读取一个字符</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">(<span class="keyword">char</span>[] chs)</span></span>;<span class="comment">//读取一个字符数组，返回值表示读取到的字符个数</span></span><br></pre></td></tr></table></figure><h4 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h4><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><p>一个应用程序已写好，后期出现的接口子类无法直接在该应用中new一个对象，该怎么办？</p><p>子类不确定，可以通过提供配置文件形式将不确定的信息存储在配置文件中即可。该程序只要之前写好读取配置文件的信息即可。</p><p>如果存储了指定的子类名，就根据具体名称找该类并进行加载和对象的创建，这些动作都是在定义软件时写好的</p><p>没有类之前就将创建对象的动作写好了，这就是动态的获取指定的类，并使用类中的功能——反射技术</p><h5 id="字节码文件对应的类"><a href="#字节码文件对应的类" class="headerlink" title="字节码文件对应的类"></a>字节码文件对应的类</h5><p>class Class    描述字节码文件的类</p><p>Field field    将字段封装成对象类型</p><p>Constructor cons    将构造函数封装成了对象类型</p><p>Method method    将类中的成员都封装成了对象</p><p>getField()</p><p>getMethod()</p><p>getConstrctor()</p><h5 id="获取字节码文件对象"><a href="#获取字节码文件对象" class="headerlink" title="获取字节码文件对象"></a>获取字节码文件对象</h5><p>要想获取字节码文件中的成员，首先要获取字节码文件对象</p><p><strong>法一</strong></p><p>通过object类中的getClass方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Person p1=<span class="keyword">new</span> Person();</span><br><span class="line">Class clszz1=p1.getClass();</span><br></pre></td></tr></table></figure><p>虽然通用，但必须有指定类，并对该类进行实例化才能调用getClass方法</p><p><strong>法二</strong></p><p>调用任意一个数据类型的一个静态成员class</p><p>不用实例化类，但还是需要指定的类</p><p><strong>法三</strong></p><p>使用class类中的forName方法，通过给定类名来获取相应的字节码文件对象</p><p>最常用，只需从配置文件中解析到类名即可</p><p>调用newInstanse()方法来实例化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">String className = <span class="string">"cn.itcast.domain.Person"</span>;<span class="comment">//一般从配置文件解析获取</span></span><br><span class="line">Class clazz = Class.forName(className);</span><br><span class="line">Object obj = clazz.newInstanse();</span><br><span class="line"><span class="comment">//1.通过给定类名称加载对应字节码文件，并封装成字节码文件对象</span></span><br><span class="line"><span class="comment">//2.通过new创建Person对象</span></span><br><span class="line"><span class="comment">//3.调用构造方法初始化</span></span><br><span class="line"><span class="comment">//通常被反射的类会提供无参构造，若没有会报instantiationException</span></span><br><span class="line"><span class="comment">//如果提供了，但是权限不够会报illegalAccessException</span></span><br><span class="line">Person p = <span class="keyword">new</span> Person();</span><br><span class="line"><span class="comment">//1.加载Person类，并将类封装成字节码对象</span></span><br><span class="line"><span class="comment">//2.通过new创建Person对象</span></span><br><span class="line"><span class="comment">//3.调用构造方法初始化</span></span><br><span class="line"></span><br><span class="line">String className = <span class="string">"cn.itcast.domain.Person"</span>;</span><br><span class="line">Class clazz = Class.forName(className);</span><br><span class="line">Constructor cons = clazz.getConstructor(String.class,<span class="keyword">int</span>.class);<span class="comment">//获取指定的构造器</span></span><br><span class="line">Object obj = cons.newInstance(<span class="string">"wangwu"</span>,<span class="number">23</span>);<span class="comment">//有了构造器对象后，通过其来初始化对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取字段需要先获取到class对象</span></span><br><span class="line">Field field = clazz.getField(字段名);<span class="comment">//公共字段可以这样获取</span></span><br><span class="line">Field field = clazz.getDeclaredField(字段名);<span class="comment">//获取以声明字段多数方法都有对应的declare</span></span><br><span class="line">field.set(obj,<span class="number">30</span>)<span class="comment">//需要获取到字段和字节码对象，只可修改公共字段</span></span><br><span class="line">field.setAccessible();<span class="comment">//暴力访问，去除该字段访问权限</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取方法，需要先获取到class对象</span></span><br><span class="line">Method method = clazz.getMethod(方法名,<span class="keyword">null</span>);<span class="comment">//第二个表示无参</span></span><br><span class="line">method.invoke(<span class="keyword">null</span>,<span class="keyword">null</span>);<span class="comment">//第一个为字节码对象，后面表示无参</span></span><br><span class="line"></span><br><span class="line">Method method = clazz.getMethod(方法名,String.class,<span class="keyword">int</span>.class);<span class="comment">//第二个表示无参</span></span><br><span class="line">method.invoke(obj,<span class="string">"wangwu"</span>,<span class="number">33</span>);</span><br></pre></td></tr></table></figure><h4 id="java设计思想"><a href="#java设计思想" class="headerlink" title="java设计思想"></a>java设计思想</h4><h5 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h5><h5 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h5><h5 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h5><ul><li>向上抽取原则</li></ul><p><img src="/.com//java%E8%BF%9B%E9%98%B6/javase2.JPG" alt></p><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><h4 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h4><p>去MySQL官网下社区版，根据网上教程配置属性</p><p>还下了SQLyog，可以图形化界面写mysql（注册码百度一下很好找）</p><h4 id="数据库（DB）和数据库管理系统（DBMS）"><a href="#数据库（DB）和数据库管理系统（DBMS）" class="headerlink" title="数据库（DB）和数据库管理系统（DBMS）"></a>数据库（DB）和数据库管理系统（DBMS）</h4><p>数据库：存储数据的仓库，本质是一个文件管理系统</p><p>数据库管理系统：是一个软件，用来管理文件</p><p>我们常说的数据库，实际上是数据库管理系统，一般习惯称为数据库</p><p>一般不直接操作DB，而是通过DBMS来操作DB</p><p><img src="/.com//%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%931.JPG" alt></p><h4 id="表（java中一个类）"><a href="#表（java中一个类）" class="headerlink" title="表（java中一个类）"></a>表（java中一个类）</h4><p>行：一条记录    类的一个对象</p><p>列：一个字段    java中一个属性</p><h4 id="常见数据库"><a href="#常见数据库" class="headerlink" title="常见数据库"></a>常见数据库</h4><p>MySQL：开源免费，小型的数据库，已经被Oracle收购，开始收费（6.x之后）</p><p>Oracle：收费的大型数据库，收购了SUN,MySQL</p><p>DB2：IBM的数据库，常用在银行，效率差，安全性高</p><p>SQLSever：Microsoft的，常用于c#，.net</p><p>SyBase：已经淡出历史舞台，提供了一个专业的数据建模工具——PowerDesigner</p><p>SQLite：嵌入式的小型数据库，用于手机端</p><p>MySQL开启和关闭</p><p>法一：此电脑-&gt;管理-&gt;服务-&gt;找到MySQL即可</p><p>法二：以管理员权限打开command</p><p>net start mysql</p><p>net stop mysql</p><p>mysql -u root -p(直接跟密码或回车然后会提示输入密码)</p><p>法三：用SQLyog</p><h4 id="SQL语句"><a href="#SQL语句" class="headerlink" title="SQL语句"></a>SQL语句</h4><p><img src="/.com//%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%932.JPG" alt></p><p>DDL：数据库定义语言    defination</p><p>主要是对数据库数据库表进行创建删除等维护操作</p><p>create 创建  drop  删除  alter  修改  show  查看</p><p>DCL：数据库操纵/控制语言    control</p><p>控制数据库访问权限</p><p>DML：数据库操作语言    manager</p><p>主要是对表中数据进行增删改</p><p>insert  增加  delete  删除  update  修改</p><p>DQL：数据库查询语言    query</p><p>主要是对表中数据进行查询</p><p>select  查询  from  从  where  条件</p><h4 id="SQL通用语法"><a href="#SQL通用语法" class="headerlink" title="SQL通用语法"></a>SQL通用语法</h4><ul><li><p>SQL语句可以单行或多行书写，以分号结尾</p></li><li><p>可使用空格和缩进来增强可读性</p></li><li><p>语句不区分大小写，关键字建议使用大写</p></li><li><p>/**/ 块注释</p><p># 单行注释</p></li><li><p>常用数据类型（还有很多，但不常用）</p><ul><li>int 整形</li><li>double 浮点型</li><li>varchar 字符串型</li><li>date 日期型 yyyy-mm-dd，没有时分秒</li></ul></li></ul><h4 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h4><h5 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h5><p>​    增</p><p>​    create database 数据库名   采用默认编码，安装时选的</p><p>​    create database 数据库名 charset utf8</p><p>​    删</p><p>​    drop database 数据库名</p><p>​    改</p><p>​    修改数据库名字很麻烦</p><p>​    use 数据库名    修改正在使用的数据库</p><p>​    查</p><p>​    select database()    查询正在使用的数据库</p><p>​    show database    查询所有数据库</p><p>​    show create database 数据库名    查询某个数据库详细信息</p><h5 id="操作数据库表"><a href="#操作数据库表" class="headerlink" title="操作数据库表"></a>操作数据库表</h5><p>​    增</p><p>​    create table 表名（</p><p>​    字段名1 数据类型1（长度） [约束]，</p><p>​    字段名2 数据类型2（长度） [约束]</p><p>​    字段名2 数据类型2（长度） [约束]</p><p>​    ）；</p><p>​    删</p><p>​    drop table 表名</p><p>​    查</p><p>​    desc 表名 查看一个表的详细信息    description</p><p>​    show tables 查看所有的表</p><p>​    改</p><p>​    rename table 表名 to 新表名    改名字</p><h5 id="操作数据库表中的列"><a href="#操作数据库表中的列" class="headerlink" title="操作数据库表中的列"></a>操作数据库表中的列</h5><p>​    增</p><p>​    alter table 表名 add 列名 类型（长度） [约束]</p><p>​    删</p><p>​    alter table 表名 drop 列名</p><p>​    查（同查看表的信息）</p><p>​    desc 表名 查看一个表的详细信息</p><p>​    改    可以修改列的名字，类型，约束等等</p><p>​    alter table 表名 change 旧列名 新列名 类型(长度) 约束   修改列名,实际上类型和约束也可以一起改了</p><p>​    alter table 表名 modify 列名 类型（长度） 约束    修改类型和约束</p><p>​    alter table 表名 character set 字符集   一般不修改</p><h4 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h4><p><strong>增</strong></p><p>insert into 表名 (列名1，列名2) values (value1，value2)    插入一条记录</p><p>列名可以选择一列或几列，前后必须一一对应</p><p>除了int，double，其它数据必须用””或’’引起来，推荐使用单引号</p><p>如果要插入的记录所有字段都有，则(列名1，列名2)可省略</p><p><strong>删</strong></p><p>delete from 表名    删除所有记录</p><p>delete from 表名 where 条件</p><p>改</p><p>update 表名 set 字段名=值 把该字段内所有的值都改了</p><p>update 表名 set 字段名=值 where 条件</p><h4 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h4><h5 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h5><p>select [distinct] *|列名1，列名2 from 表名    查询表中所有行数据</p><p>distinct    去重查询</p><p>字段名+10    查询结果是表达式    运算查询</p><p>字段名+10 as 新名字    别名查询</p><h5 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h5><p><img src="/.com//%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%933.JPG" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">where price &lt;&gt; 60;</span><br><span class="line"></span><br><span class="line">where not (price=60);</span><br><span class="line"></span><br><span class="line">where price &gt;= 400 and price &lt;= 600;</span><br><span class="line"></span><br><span class="line">where price between 400 and 600;</span><br><span class="line"></span><br><span class="line">where price in (400,600);价格是400和600的</span><br><span class="line"></span><br><span class="line">where price &gt;1000 or price &lt; 300;</span><br><span class="line"></span><br><span class="line">where pname like &apos;%霸%&apos;名字中含&apos;霸&apos;的商品</span><br><span class="line"></span><br><span class="line">where pname like &apos;_霸%&apos;名字中第二个字为&apos;霸&apos;的商品</span><br><span class="line"></span><br><span class="line">where pname is null;没有名字的，不可以用pname=null</span><br><span class="line"></span><br><span class="line">where price &gt;2000 and category_id in (&apos;c002&apos;,&apos;c003&apos;);</span><br><span class="line"></span><br><span class="line">where (price &gt;2000 and category_id=&apos;c002&apos;)</span><br><span class="line"></span><br><span class="line">or(price &gt;2000 and category_id=&apos;c003&apos;);</span><br></pre></td></tr></table></figure><h5 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h5><p>对查询结果进行排序，关键字order by</p><p>格式：查询语句 order by 字段名 [ASC|DESC]</p><p>ASC 升序，从小到大，默认</p><p>DESC 降序，从大到小</p><h5 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a>聚合查询</h5><p>以前的查询都是横向记录查询，该查询是纵向个数查询</p><p>查询特点：查询到的是单一值</p><p>聚合函数：求记录数的聚合函数    </p><p>格式：聚合函数（字段名）</p><p>​    count函数会自动忽略空值</p><p>​    max：求最大值</p><p>​    min：求最小值</p><p>​    avg：求平均值</p><p>​    sum：求和</p><h5 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h5><p>把查询到的结果分成几个组，先分组再查询，具体查询到的结果数，取决于分成几个组</p><p>若分组后还有条件需要判断，用having关键字</p><p>where写在基本查询语句后，且后面不可以写聚合函数</p><p>having写在分组查询后，且后面可以写聚合函数</p><p>格式：查询语句 group by 字段</p><p>select count(<em>) from product group by categroy_id having count(\</em>)&gt;1    </p><p>只显示个数大于1的商品分类，<strong>注意条件用having</strong></p><h5 id="完整查询过程"><a href="#完整查询过程" class="headerlink" title="完整查询过程"></a>完整查询过程</h5><p><img src="/.com//%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%934.JPG" alt></p><h5 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h5><p>只查询记录的一部分</p><p>格式：limit 数值一（开始下标，从0开始计数），数值二（需要查出的记录数）</p><p>查询公式：假设每次查n条</p><p>第m页  limit (m-1)*n,n</p><h5 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h5><p><strong>交叉查询</strong></p><p>格式：select * from 表一，表二</p><p>总字段=表一字段+表二字段</p><p>总记录数=表一记录数*表二记录数</p><p>但交叉查询无实际意义，实际上是一个矩阵（坐标）的笛卡尔，是另外两个查询的基础</p><p><strong>内连接查询    inner join</strong></p><p>隐式内连接查询：不写关键字inner join</p><p>select * from 表一，表二 where 表一.主键=表二.外键</p><p>显式内连接查询：写关键字inner join</p><p>select * from 表一 inner join 表二 on 表一.主键=表二.外键</p><p><strong>外连接查询    outer join</strong></p><p>左外连接：left outer join</p><p>select * from 表一 left outer join 表二 on 表一.主键=表二.外键</p><p>左外连接，以左表为主，左表中数据都会有</p><p>右外连接：right outer join</p><p>select * from 表一 right outer join 表二 on 表一.主键=表二.外键</p><p>右外连接，以右表为主，右表中数据都会有</p><h5 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h5><p>一个查询的结果，做另一个查询的一部分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> category_id <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> cid <span class="keyword">FROM</span> <span class="keyword">category</span> <span class="keyword">WHERE</span> cname <span class="keyword">IN</span>(<span class="string">'化妆品'</span>，<span class="string">'家电'</span>))；</span><br></pre></td></tr></table></figure><h4 id="SQL备份和恢复"><a href="#SQL备份和恢复" class="headerlink" title="SQL备份和恢复"></a>SQL备份和恢复</h4><p>在SQLyog中，右击数据库进行导入和导出</p><h4 id="三个知识点"><a href="#三个知识点" class="headerlink" title="三个知识点"></a>三个知识点</h4><h5 id="两个约束"><a href="#两个约束" class="headerlink" title="两个约束"></a>两个约束</h5><p>主键约束(primary key):只能有一个，值必须唯一且不能为空</p><p>自动增长约束（auto_increment):初始值唯一，若被设置为一个值后，下一个值从这个的基础上增加</p><p>删除表所有数据的两种方式</p><p>delete from 表名    所有记录被删除，但自增值不会重置</p><p>truncate table 表名    删除所有记录，并重置自增值 底层是先摧毁表，再重建</p><p>乱码问题</p><p>在DOS中查看utf8编码的数据库数据时会出现乱码问题，因为DOS默认的是gbk</p><p>解决方法</p><p>临时方案：set names gbk    临时的确告诉数据库我们用gbk来查询</p><p>永久方案：修改my.ini的配置文件，不建议</p><h4 id="数据完整性"><a href="#数据完整性" class="headerlink" title="数据完整性"></a>数据完整性</h4><p>添加数据完整性==添加表约束</p><p>实体完整性：对数据行的约束，比如主键约束，唯一约束</p><p>域完整性：对数据列的约束</p><p>引用完整性：外键约束（多表关系）</p><p><img src="/.com//%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%935.JPG" alt></p><h4 id="各种约束"><a href="#各种约束" class="headerlink" title="各种约束"></a>各种约束</h4><p>主键约束：primary key    保证该字段唯一并且不为空</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在创建表的时候直接在字段后面添加</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> books &#123;</span><br><span class="line">bid <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">bname <span class="built_in">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">bprice <span class="keyword">DOUBLE</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">-- 在创建表的时候，不直接在字段后添加，而是在表的约束区域添加</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> books &#123;</span><br><span class="line">bid <span class="built_in">INT</span>,</span><br><span class="line">bname <span class="built_in">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">bprice <span class="keyword">DOUBLE</span>，<span class="comment">-- 此处为约束区域</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> pk_bid PRIMARY <span class="keyword">KEY</span>(bid)</span><br><span class="line">&#125;;</span><br><span class="line">//创建表后，通过修改表的结构，给某个字段添加主键</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> books <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> pk_bid PRIMARY <span class="keyword">KEY</span>(bid)</span><br><span class="line"></span><br><span class="line">//删除主键约束</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> books <span class="keyword">DROP</span> PRIMARY <span class="keyword">KEY</span>;<span class="comment">-- 因为只能有一个主键，所以无需加字段名</span></span><br></pre></td></tr></table></figure><p>唯一约束：unique    保证该字段唯一，可以为null</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在创建表的时候直接在字段后面添加</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> books &#123;</span><br><span class="line">bid <span class="built_in">INT</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">bname <span class="built_in">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">bprice <span class="keyword">DOUBLE</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在创建表的时候，不直接在字段后添加，而是在表的约束区域添加</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> books &#123;</span><br><span class="line">bid <span class="built_in">INT</span>,</span><br><span class="line">bname <span class="built_in">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">bprice <span class="keyword">DOUBLE</span>，</span><br><span class="line"><span class="comment">-- 此处为约束区域</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> unique_bid <span class="keyword">UNIQUE</span>(bid)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表后，通过修改表的结构，给某个字段添加主键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> books <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> pk_bid PRIMARY <span class="keyword">KEY</span>(bid);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> books <span class="keyword">DROP</span> <span class="keyword">UNIQUE</span>(约束名);<span class="comment">-- /如果添加唯一约束时没起名字，默认是字段名</span></span><br></pre></td></tr></table></figure><p>自动增长约束：auto_increment    把该字段的值交给数据库去维护，默认每次加一（这个字段必须是建，多为主键）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在创建表的时候直接在字段后面添加</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> books &#123;</span><br><span class="line">bid <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">bname <span class="built_in">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">bprice <span class="keyword">DOUBLE</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在创建表的时候，不直接在字段后添加，而是在表的约束区域添加</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> books &#123;</span><br><span class="line">bid <span class="built_in">INT</span>,</span><br><span class="line">bname <span class="built_in">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">bprice <span class="keyword">DOUBLE</span>，</span><br><span class="line"><span class="comment">-- 此处为约束区域</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> pk_bid PRIMARY <span class="keyword">KEY</span>(bid)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表后，通过修改表的结构，给某个字段添加主键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> books <span class="keyword">MODIFY</span> bid <span class="built_in">INT</span> AUTO_CREMENT<span class="comment">-- /字段名 类型 约束</span></span><br><span class="line"><span class="comment">-- 删除主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> books <span class="keyword">MODIFY</span> bid <span class="built_in">INT</span>;</span><br></pre></td></tr></table></figure><p>非空约束：not null    被约束字段不可为空值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在创建表的时候直接在字段后面添加</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> books &#123;</span><br><span class="line">bid <span class="built_in">INT</span>,</span><br><span class="line">bname <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">bprice <span class="keyword">DOUBLE</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表后，通过修改表的结构，给某个字段添加主键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> books <span class="keyword">MODIFY</span> 字段 属性,<span class="comment">-- 类似auto_increment</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> books <span class="keyword">MODIFY</span> 字段 属性;</span><br></pre></td></tr></table></figure><p>默认约束：default    给字段添加一个默认值，如果添加记录时没赋值的话用默认值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在创建表的时候直接在字段后面添加</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> books &#123;</span><br><span class="line">bid <span class="built_in">INT</span>,</span><br><span class="line">bname <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="string">'JAVA 入门'</span>,</span><br><span class="line">bprice <span class="keyword">DOUBLE</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表后，通过修改表的结构，给某个字段添加主键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> books <span class="keyword">MODIFY</span> 字段 属性,<span class="comment">-- 类似auto_increment</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> books <span class="keyword">MODIFY</span> 字段 属性;</span><br></pre></td></tr></table></figure><h4 id="多表操作"><a href="#多表操作" class="headerlink" title="多表操作"></a>多表操作</h4><p>双向看，两边都是一个记录对另一边多个记录，这是多对多，否则为一对多</p><p>一对多：两张表即可</p><p><img src="/.com//%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%936.JPG" alt></p><p><img src="/.com//%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%938.JPG" alt></p><p>多对多：需要一张中间表</p><p><img src="/.com//%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%937.JPG" alt></p><p><img src="/.com//%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%939.JPG" alt></p><p><img src="/.com//%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%9311.JPG" alt></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 多对多建表，一张学生表，一张课程表，一张中间表，至少两个字段</span></span><br><span class="line"><span class="comment">-- 创建三张表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student&#123;</span><br><span class="line"><span class="keyword">sid</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">sname <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">sage <span class="built_in">INT</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> course&#123;</span><br><span class="line">cid <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">cname <span class="built_in">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student_course_item&#123;</span><br><span class="line">student_id <span class="built_in">INT</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">-- 添加外键约束核心</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student_course_item <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> item_student_fk</span><br><span class="line"><span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(student_id) REFENRENCE student (<span class="keyword">sid</span>);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student_course_item <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> item_course_fk</span><br><span class="line"><span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(course_id) REFENRENCE course (cid);</span><br></pre></td></tr></table></figure><p>特例：有时候两张表内记录一对一，但字段过多，也会分成两张表</p><p><img src="/.com//%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%9310.JPG" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;java基础&quot;&gt;&lt;a href=&quot;#java基础&quot; class=&quot;headerlink&quot; title=&quot;java基础&quot;&gt;&lt;/a&gt;java基础&lt;/h3&gt;&lt;h4 id=&quot;入门及环境搭建&quot;&gt;&lt;a href=&quot;#入门及环境搭建&quot; class=&quot;headerlink&quot; title=&quot;入门及环境搭建&quot;&gt;&lt;/a&gt;入门及环境搭建&lt;/h4&gt;&lt;h5 id=&quot;下载JDK&quot;&gt;&lt;a href=&quot;#下载JDK&quot; class=&quot;headerlink&quot; title=&quot;下载JDK&quot;&gt;&lt;/a&gt;下载JDK&lt;/h5&gt;&lt;p&gt;进入Oracle官网，下载相应版本，最近下载好像都得注册个账号&lt;/p&gt;
&lt;p&gt;下完按到所需目录，一般默认，一直下一步即可，完了设置一下环境变量&lt;/p&gt;
&lt;p&gt;此电脑-&amp;gt;属性-&amp;gt;高级系统设置-&amp;gt;环境变量-&amp;gt;编辑path，把bin目录路径加入&lt;/p&gt;
&lt;p&gt;classpath也可以设置&lt;/p&gt;
&lt;p&gt;在cmd中，输入java -version检查是否安装成功&lt;/p&gt;
&lt;p&gt;javac 文件路径（编译，生成。class文件）&lt;/p&gt;
&lt;p&gt;java 文件名，不加后缀，运行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IDE选择&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;目前比较流行的是eclipse和IDEA，我更喜欢IDEA，熟练了快捷键和各种模板之后会用得很舒服&lt;/p&gt;
&lt;h5 id=&quot;语言特点&quot;&gt;&lt;a href=&quot;#语言特点&quot; class=&quot;headerlink&quot; title=&quot;语言特点&quot;&gt;&lt;/a&gt;语言特点&lt;/h5&gt;&lt;p&gt;通过编译成统一的字节码，不同平台下载对应JVM来实现跨平台&lt;/p&gt;
&lt;p&gt;完全面向对象，简单，高性能，分布式，多线程，健壮&lt;/p&gt;
&lt;p&gt;JDK（用于开发）-&amp;gt;JRE（运行环境）-&amp;gt;JVM(依次包含)&lt;/p&gt;
&lt;p&gt;java SE    标准版，定位于个人计算机用户&lt;/p&gt;
&lt;p&gt;java EE    企业版，定位于服务器端领域&lt;/p&gt;
&lt;p&gt;java ME    微型版，定位于消费电子产品的应用&lt;/p&gt;
&lt;p&gt;越高级语言越容易入门，但要精通还需沉下心来&lt;/p&gt;
&lt;h4 id=&quot;数据类型和运算符&quot;&gt;&lt;a href=&quot;#数据类型和运算符&quot; class=&quot;headerlink&quot; title=&quot;数据类型和运算符&quot;&gt;&lt;/a&gt;数据类型和运算符&lt;/h4&gt;&lt;h5 id=&quot;注释&quot;&gt;&lt;a href=&quot;#注释&quot; class=&quot;headerlink&quot; title=&quot;注释&quot;&gt;&lt;/a&gt;注释&lt;/h5&gt;&lt;p&gt;单行，多行，文档注释&lt;/p&gt;
&lt;h5 id=&quot;标识符的命名规则&quot;&gt;&lt;a href=&quot;#标识符的命名规则&quot; class=&quot;headerlink&quot; title=&quot;标识符的命名规则&quot;&gt;&lt;/a&gt;标识符的命名规则&lt;/h5&gt;&lt;p&gt;虽然不同语言之间会有细微区别，但为了便于编写，感觉大多数语言都推荐采用比较大众的规范&lt;/p&gt;
&lt;p&gt;不可以是java关键字，并且大小写敏感&lt;/p&gt;
&lt;p&gt;类名    大驼峰命名法&lt;/p&gt;
&lt;p&gt;方法和变量    小驼峰命名法&lt;/p&gt;
&lt;p&gt;常量    大写&lt;/p&gt;
&lt;p&gt;数据类型向上隐士转换，向下需要显示加括号强转&lt;/p&gt;
&lt;h5 id=&quot;基本数据类型（四类八种）&quot;&gt;&lt;a href=&quot;#基本数据类型（四类八种）&quot; class=&quot;headerlink&quot; title=&quot;基本数据类型（四类八种）&quot;&gt;&lt;/a&gt;基本数据类型（四类八种）&lt;/h5&gt;&lt;p&gt;byte(1)  boolean(1)  short(2)  char(2)unicode字符集  int()4  float(4)  long(8)  double(8)&lt;/p&gt;
&lt;h5 id=&quot;引用数据类型&quot;&gt;&lt;a href=&quot;#引用数据类型&quot; class=&quot;headerlink&quot; title=&quot;引用数据类型&quot;&gt;&lt;/a&gt;引用数据类型&lt;/h5&gt;&lt;p&gt;string，数组，集合ArrayList，Scanner，Random，自定义类型&lt;/p&gt;
&lt;h4 id=&quot;面向对象&quot;&gt;&lt;a href=&quot;#面向对象&quot; class=&quot;headerlink&quot; title=&quot;面向对象&quot;&gt;&lt;/a&gt;面向对象&lt;/h4&gt;&lt;p&gt;面向对象是一种编程思想，是相当于面向过程的&lt;/p&gt;
&lt;p&gt;面向过程：遇到问题，亲力亲为一步一步解决&lt;/p&gt;
&lt;p&gt;面向对象：遇到一个问题，找具有解决这个问题能力的对象，调用它的方法&lt;/p&gt;
&lt;p&gt;类的格式&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; 类名&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//构造方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//成员类名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//成员方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//一个标准的类	封装：隐藏细节，对外暴露公共防蚊1方式		构造：无参必须有，全参最好有&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//类名作为方法参数或返回值时需要传入或返回的应该是该类的对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/.com//java%E8%BF%9B%E9%98%B6/javase1.JPG&quot; alt&gt;&lt;/p&gt;
&lt;h5 id=&quot;this关键字&quot;&gt;&lt;a href=&quot;#this关键字&quot; class=&quot;headerlink&quot; title=&quot;this关键字&quot;&gt;&lt;/a&gt;this关键字&lt;/h5&gt;&lt;p&gt;区分局部变量和成员变量同名的情况&lt;/p&gt;
&lt;p&gt;this的本质：实际上是个对象    谁调用的方法，this指的就是谁&lt;/p&gt;
&lt;p&gt;匿名对象：（可用可不用）    没有名字的对象&lt;/p&gt;
&lt;p&gt;只创建对象，但不用变量接收&lt;/p&gt;
&lt;p&gt;在一些用来传参后续不调用时使用&lt;/p&gt;
&lt;p&gt;特点：匿名对象也是一个对象，具有对象所有功能&lt;/p&gt;
&lt;p&gt;​            每次调用都是一个新的对象，所一每个对象只能使用一次&lt;/p&gt;
&lt;h5 id=&quot;super关键字&quot;&gt;&lt;a href=&quot;#super关键字&quot; class=&quot;headerlink&quot; title=&quot;super关键字&quot;&gt;&lt;/a&gt;super关键字&lt;/h5&gt;&lt;p&gt;区分子类和父类成员同名的情况，但默认优先调用子类&lt;/p&gt;
&lt;h5 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h5&gt;&lt;p&gt;继承是两个类之间的关系，子类继承父类&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; 子类 &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; 父类&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//继承必须合理	人是人他妈生的，妖是妖他妈生的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//继承中的成员抽取了子类中的共性内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//子类会自动继承父类中所有成员，但private不可访问&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//继承后成员变量不同时，没有任何问题，相同时优先访问子类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//继承后成员方法不同时，没有任何问题，相同时(子类重写了父类方法时)优先访问子类，但可以通过super.方法名访问&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//只能单继承，但可以多层继承（直接父类唯一，但可以有多个间接父类）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//多继承的话调用方法时会产生不确定性，同名父类成员不知道该掉哪个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;继承大大提高代码重用性&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/.com//java%E8%BF%9B%E9%98%B6/javase3.JPG&quot; alt&gt;&lt;/p&gt;
&lt;h4 id=&quot;String中的方法（4532）&quot;&gt;&lt;a href=&quot;#String中的方法（4532）&quot; class=&quot;headerlink&quot; title=&quot;String中的方法（4532）&quot;&gt;&lt;/a&gt;String中的方法（4532）&lt;/h4&gt;&lt;h5 id=&quot;判断方法&quot;&gt;&lt;a href=&quot;#判断方法&quot; class=&quot;headerlink&quot; title=&quot;判断方法&quot;&gt;&lt;/a&gt;判断方法&lt;/h5&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String str)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;equalsIngoreCase&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String str)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String str)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;endsWith&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String str)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&quot;获取方法&quot;&gt;&lt;a href=&quot;#获取方法&quot; class=&quot;headerlink&quot; title=&quot;获取方法&quot;&gt;&lt;/a&gt;获取方法&lt;/h5&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String str)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; startIndex)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; startIndex,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; endIndex)&lt;/span&gt;&lt;/span&gt;;	&lt;span class=&quot;comment&quot;&gt;//左闭右开&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;indexof&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String subStr)&lt;/span&gt;&lt;/span&gt;;	&lt;span class=&quot;comment&quot;&gt;//少用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&quot;转换方法&quot;&gt;&lt;a href=&quot;#转换方法&quot; class=&quot;headerlink&quot; title=&quot;转换方法&quot;&gt;&lt;/a&gt;转换方法&lt;/h5&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[] &lt;span class=&quot;title&quot;&gt;toCharArray&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&quot;其它方法&quot;&gt;&lt;a href=&quot;#其它方法&quot; class=&quot;headerlink&quot; title=&quot;其它方法&quot;&gt;&lt;/a&gt;其它方法&lt;/h5&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;	&lt;span class=&quot;comment&quot;&gt;//去掉两端空格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String[] split(String str);	&lt;span class=&quot;comment&quot;&gt;//一某一个字符串来分割字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>xmind使用</title>
    <link href="http://yoursite.com/2019/08/13/xmind%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/08/13/xmind使用/</id>
    <published>2019-08-13T12:43:43.000Z</published>
    <updated>2019-08-13T13:15:17.872Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h4 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h4><p>使用的较简单的免费版，本意只是为了简单的做一些总结<br>之所以选择xmind:zen而不是xmind 8是因为感觉xmind:zen相对来说更小，启动速度更快，并且感觉更加代表了未来的发展方向，xmind 8有些笨重了<br><a href="https://www.xmind.cn" target="_blank" rel="noopener">官网</a></p><h4 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h4><p><strong>编辑主题文字：</strong>选中主题“双击鼠标”或者按【空格键<strong>】</strong></p><p><strong>添加同级主题：</strong>快捷键<strong>【</strong>enter/return<strong>】</strong></p><p><strong>添加子主题：</strong>可快捷键【tab】</p><p><strong>删除：</strong>选中主题按【delete/backspace】</p><a id="more"></a><p><strong>添加外框：</strong>选中要框选的主题按工具栏的【外框】进行添加</p><p><strong>添加概要：</strong>选中主题按工具栏的【概要】进行添加</p><p><strong>添加笔记：</strong> ctrl+shift+n(note)</p><p><strong>撤销:</strong> Ctrl+z</p><p><strong>恢复:</strong> Ctrl+y</p><p>emmm,帮助-&gt;快捷键助手，基本列出了常用快捷键，还可以自定义快捷键</p><p>自己直接上手也很easy，就不一一总结了</p><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>整体使用还是比较符合我的预期的，启动快，简约，操作方便，虽然免费版导出格式受限，并且还有水印，但这个对我基本没什么影响</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h4 id=&quot;软件下载&quot;&gt;&lt;a href=&quot;#软件下载&quot; class=&quot;headerlink&quot; title=&quot;软件下载&quot;&gt;&lt;/a&gt;软件下载&lt;/h4&gt;&lt;p&gt;使用的较简单的免费版，本意只是为了简单的做一些总结&lt;br&gt;之所以选择xmind:zen而不是xmind 8是因为感觉xmind:zen相对来说更小，启动速度更快，并且感觉更加代表了未来的发展方向，xmind 8有些笨重了&lt;br&gt;&lt;a href=&quot;https://www.xmind.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;使用技巧&quot;&gt;&lt;a href=&quot;#使用技巧&quot; class=&quot;headerlink&quot; title=&quot;使用技巧&quot;&gt;&lt;/a&gt;使用技巧&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;编辑主题文字：&lt;/strong&gt;选中主题“双击鼠标”或者按【空格键&lt;strong&gt;】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;添加同级主题：&lt;/strong&gt;快捷键&lt;strong&gt;【&lt;/strong&gt;enter/return&lt;strong&gt;】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;添加子主题：&lt;/strong&gt;可快捷键【tab】&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;删除：&lt;/strong&gt;选中主题按【delete/backspace】&lt;/p&gt;
    
    </summary>
    
    
      <category term="思维导图" scheme="http://yoursite.com/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
      <category term="软件使用" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>java学习</title>
    <link href="http://yoursite.com/2019/08/03/java%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/08/03/java学习/</id>
    <published>2019-08-03T14:02:27.000Z</published>
    <updated>2019-09-01T01:31:25.141Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="java基础"><a href="#java基础" class="headerlink" title="java基础"></a>java基础</h3><h4 id="入门及环境搭建"><a href="#入门及环境搭建" class="headerlink" title="入门及环境搭建"></a>入门及环境搭建</h4><h5 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h5><p>进入Oracle官网，下载相应版本，最近下载好像都得注册个账号</p><p>下完按到所需目录，一般默认，一直下一步即可，完了设置一下环境变量</p><p>在cmd中，输入java -version检查是否安装成功</p><p>javac 文件路径（编译，生成。class文件）</p><p>java 文件名，不加后缀，运行</p><p>IDE选择</p><p>目前比较流行的是eclipse和IDEA，我更喜欢IDEA，熟练了快捷键和各种模板之后会用得很舒服</p><p><a href="[https://guardwarm.github.io/2019/07/30/java%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E4%B9%8BintelliJ-IDEA/](https://guardwarm.github.io/2019/07/30/java开发工具之intelliJ-IDEA/)">IDEA教程</a></p><h5 id="语言特点"><a href="#语言特点" class="headerlink" title="语言特点"></a>语言特点</h5><p>通过编译成统一的字节码，不同平台下载对应JVM来实现跨平台</p><p>完全面向对象，简单，高性能，分布式，多线程，健壮</p><p>JDK（用于开发）-&gt;JRE（运行环境）-&gt;JVM(依次包含)</p><p>java SE    标准版，定位于个人计算机用户</p><p>java EE    企业版，定位于服务器端领域</p><p>java ME    微型版，定位于消费电子产品的应用</p><p>越高级语言越容易入门，但要精通还需沉下心来</p><h4 id="数据类型和运算符"><a href="#数据类型和运算符" class="headerlink" title="数据类型和运算符"></a>数据类型和运算符</h4><h5 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h5><p>单行，多行，文档注释</p><h5 id="标识符的命名规则"><a href="#标识符的命名规则" class="headerlink" title="标识符的命名规则"></a>标识符的命名规则</h5><p>虽然不同语言之间会有细微区别，但为了便于编写，感觉大多数语言都推荐采用比较大众的规范</p><p>不可以是java关键字，并且大小写敏感</p><p>类名    大驼峰命名法</p><p>方法和变量    小驼峰命名法</p><p>常亮    大写</p><h5 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h5><ul><li><p>基本数据类型</p><p>整形：byte  short  int  long</p><p>浮点型：float  double</p><p>字符型：char</p><p>布尔型：boolean（大小为一位，不可用数字赋值）</p></li><li><p>引用数据类型</p></li></ul><p>数据类型向上隐士转换，向下需要显示加括号强转</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;java基础&quot;&gt;&lt;a href=&quot;#java基础&quot; class=&quot;headerlink&quot; title=&quot;java基础&quot;&gt;&lt;/a&gt;java基础&lt;/h3&gt;&lt;h4 id=&quot;入门及环境搭建&quot;&gt;&lt;a href=&quot;#入门及环境搭建&quot; class=&quot;h
      
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="编程" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>java开发工具之intelliJ IDEA</title>
    <link href="http://yoursite.com/2019/07/30/java%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E4%B9%8BintelliJ-IDEA/"/>
    <id>http://yoursite.com/2019/07/30/java开发工具之intelliJ-IDEA/</id>
    <published>2019-07-30T04:56:21.000Z</published>
    <updated>2019-08-03T05:54:35.759Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>Java开发主流工具是Eclipse（IBM开发）和intellij IDEA（jetbrains）。目前intellij IDEA明显使用人数增加。</p><h5 id="主要优势"><a href="#主要优势" class="headerlink" title="主要优势"></a>主要优势</h5><p>强大的整合能力，比如git，Maven，Spring等</p><p>提示功能的快速，便捷，范围广</p><p>好用的快捷键和代码模板</p><p>精确搜索</p><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><p><a href="https://www.jetbrains.com/idea/download/#section=windows" target="_blank" rel="noopener">下载地址</a></p><h5 id="安装目录"><a href="#安装目录" class="headerlink" title="安装目录"></a>安装目录</h5><p><img src="/.com//img/%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95.JPG" alt="安装目录"></p><p>第一个目录存的是配置信息，比如字体，快捷键设置，插件</p><p>第二个存的是索引，缓存等（刚启动时会自动生成索引，这段时间最好安静等待，不然可能会报一些莫名其妙的错）</p><p><img src="/.com//img/index.JPG" alt="index"></p><p>如果出了什么问题，可以把第二个目录干掉，一般重启一下就好了</p><p>程序主体安装在自己安装时选择的目录下</p><a id="more"></a><h5 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h5><p><img src="/.com//img/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE.JPG" alt="new project"></p><p>自己导入一下SDK，其余看需求勾选，只是java的话下一步就好</p><p>起个名字，选个存储路径就结束了</p><p><img src="/.com//img/%E9%A1%B9%E7%9B%AE%E5%91%BD%E5%90%8D.JPG" alt="name project"></p><p>创建一个moudle-&gt;package-&gt;再在内部创建java类</p><p>删除Module：右击，F4，减掉，再右击，就可以找到delete</p><p>右上角文件夹图标，点击可以查看项目属性</p><h5 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h5><p>行号旁边单击可以添加断点，右击断点可以改为条件断点</p><p>单步，跳出之类的与大多数IDE一致</p><h5 id="取消自动更新"><a href="#取消自动更新" class="headerlink" title="取消自动更新"></a>取消自动更新</h5><p><img src="/.com//img/%E5%8F%96%E6%B6%88%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0.JPG" alt="auto updata"></p><h5 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h5><p>可以直接在设置中查找插件    Plugins</p><h5 id="生成javadoc"><a href="#生成javadoc" class="headerlink" title="生成javadoc"></a>生成javadoc</h5><p>tool -&gt; generate javadoc</p><p>选择要生成的文件，位置</p><p>locate     zh_CN</p><p>other command line arguments: -encoding UTF-8 -charset UTF-8</p><h5 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h5><p>具体自行百度</p><h5 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h5><p>setting -&gt; editor -&gt; General -&gt;Ctrl+鼠标滚轮改变字体大小/显示快速文档提示，可更改悬停时间/auto import自动导包（展开General）/显示方法间分隔符（apperance）/忽略大小写（code completion）/取消单行显示标签（editor tabs）</p><p>font修改字体大小及样式</p><p>editor内可以单独修改编辑器和控制台样式</p><p>language default -&gt; comments 修改注释颜色</p><p>editor -&gt; code style -&gt; file and code template -&gt; include -&gt; file header(编写头部信息)</p><p>editor -&gt; encoding -&gt; 可以将编码格式都改为utf-8（右下角显示了当前文件编码格式）</p><p>（reload  改变当前文件显示方式   convert    彻底转变）</p><p>build -&gt; compiler(设置自动编译)</p><p>file -&gt; power save module(省电模式，关闭代码提示等功能)</p><p>右击别的文件标签可以设置显示方式，同时打开多个文件</p><h5 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h5><p>setting -&gt;keymap -&gt; 在搜索框中输入功能，会提示对应快捷键/点击搜索图标，可以输入快捷键，提示对应功能</p><p>run    Ctrl+f5、shift+f10</p><p>提示补全    Ctrl+Alt+空格</p><p>单行注释    Ctrl+/</p><p>多行注释    Ctrl+shift+/</p><p>向下复制一行    Ctrl+d</p><p>删除选中行    Ctrl+y</p><p>向上移动一行    Ctrl+shift+向上箭头</p><p>向下移动一行    Ctrl+shift+向下箭头</p><p>向下开始新的一行    Ctrl+enter</p><p>向上开始新的一行    Ctrl+shift+enter</p><p>查看源码    按住Ctrl，点击要查看的/还有一种暂时没找见快捷键</p><p>查看继承关系    光标位于想查看元素上，ctrl+h</p><p>万能解错/生成返回值    alt+enter</p><p>返回到前一个编辑的页面    alt+right</p><p>进入到下一个编辑的页面    alt+left</p><p>格式化代码    Ctrl+alt+l</p><p>提示方法参数类型    Ctrl+p</p><p>复制，剪切，粘贴，全选与Windows一致</p><p>撤销    Ctrl+z</p><p>反撤销    ctrl+shift+z</p><p>选中数行，整体后移    tab</p><p>选中数行，整体前移    shift+tab</p><p>查看类的结构    ctrl+o</p><p>重构：修改变量名和方法名    shift+f6</p><p>大小写转化    Ctrl+shift+u</p><p>生成构造函数    alt+fn+insert</p><p>查看文档说明    Ctrl+q</p><p>收起所有方法    Ctrl+shift+减号</p><p>打开所有方法    Ctrl+shift+等号</p><p>打开代码所在硬盘文件夹    Ctrl+shift+x（我在设置中自己设置的）</p><p>生成try—catch等    alt+ctrl</p><p>查看方法在那些地方被调用过    Ctrl+h</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h5&gt;&lt;p&gt;Java开发主流工具是Eclipse（IBM开发）和intellij IDEA（jetbrains）。目前intellij IDEA明显使用人数增加。&lt;/p&gt;
&lt;h5 id=&quot;主要优势&quot;&gt;&lt;a href=&quot;#主要优势&quot; class=&quot;headerlink&quot; title=&quot;主要优势&quot;&gt;&lt;/a&gt;主要优势&lt;/h5&gt;&lt;p&gt;强大的整合能力，比如git，Maven，Spring等&lt;/p&gt;
&lt;p&gt;提示功能的快速，便捷，范围广&lt;/p&gt;
&lt;p&gt;好用的快捷键和代码模板&lt;/p&gt;
&lt;p&gt;精确搜索&lt;/p&gt;
&lt;h5 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/idea/download/#section=windows&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;安装目录&quot;&gt;&lt;a href=&quot;#安装目录&quot; class=&quot;headerlink&quot; title=&quot;安装目录&quot;&gt;&lt;/a&gt;安装目录&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/.com//img/%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95.JPG&quot; alt=&quot;安装目录&quot;&gt;&lt;/p&gt;
&lt;p&gt;第一个目录存的是配置信息，比如字体，快捷键设置，插件&lt;/p&gt;
&lt;p&gt;第二个存的是索引，缓存等（刚启动时会自动生成索引，这段时间最好安静等待，不然可能会报一些莫名其妙的错）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/.com//img/index.JPG&quot; alt=&quot;index&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果出了什么问题，可以把第二个目录干掉，一般重启一下就好了&lt;/p&gt;
&lt;p&gt;程序主体安装在自己安装时选择的目录下&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="开发工具" scheme="http://yoursite.com/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>看过的一些编程书及评价</title>
    <link href="http://yoursite.com/2019/07/28/%E7%9C%8B%E8%BF%87%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BC%96%E7%A8%8B%E4%B9%A6%E5%8F%8A%E8%AF%84%E4%BB%B7/"/>
    <id>http://yoursite.com/2019/07/28/看过的一些编程书及评价/</id>
    <published>2019-07-28T14:10:10.000Z</published>
    <updated>2019-08-01T12:20:11.228Z</updated>
    
    <content type="html"><![CDATA[<h3 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h3><hr><h4 id="汇编语言基础教程-James-T-Streib"><a href="#汇编语言基础教程-James-T-Streib" class="headerlink" title="汇编语言基础教程         James T.Streib"></a>汇编语言基础教程         James T.Streib</h4><p>整体讲解不够深入，用了很多高级汇编指令，与最初想了解底层如何实现的初衷相违背，并且很多话说的不清楚，很绕。整体学到了一些东西，算是入门了，但整体感觉不好，不推荐。</p><h3 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h3><hr><h4 id="跟阿铭学linux（第三版）"><a href="#跟阿铭学linux（第三版）" class="headerlink" title="跟阿铭学linux（第三版）"></a>跟阿铭学linux（第三版）</h4><p>学linux最初的各种命令是看的网课。那几个明明运用及理解都不难的命令，反反复复讲了好长时间，白白浪费了不少时间。我感觉看书来学习linux的各种命令更高效，这本书整体节奏不错，难度感觉略高一点，但认着看，感觉看的很舒服，收货很多。勉强算适合小白吧，我感觉还是有一些对新手不怎么友好的点。</p><p>（这本书学习笔记参见）</p><a id="more"></a><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;汇编&quot;&gt;&lt;a href=&quot;#汇编&quot; class=&quot;headerlink&quot; title=&quot;汇编&quot;&gt;&lt;/a&gt;汇编&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;汇编语言基础教程-James-T-Streib&quot;&gt;&lt;a href=&quot;#汇编语言基础教程-James-T-Streib&quot; class=&quot;headerlink&quot; title=&quot;汇编语言基础教程         James T.Streib&quot;&gt;&lt;/a&gt;汇编语言基础教程         James T.Streib&lt;/h4&gt;&lt;p&gt;整体讲解不够深入，用了很多高级汇编指令，与最初想了解底层如何实现的初衷相违背，并且很多话说的不清楚，很绕。整体学到了一些东西，算是入门了，但整体感觉不好，不推荐。&lt;/p&gt;
&lt;h3 id=&quot;运维&quot;&gt;&lt;a href=&quot;#运维&quot; class=&quot;headerlink&quot; title=&quot;运维&quot;&gt;&lt;/a&gt;运维&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;跟阿铭学linux（第三版）&quot;&gt;&lt;a href=&quot;#跟阿铭学linux（第三版）&quot; class=&quot;headerlink&quot; title=&quot;跟阿铭学linux（第三版）&quot;&gt;&lt;/a&gt;跟阿铭学linux（第三版）&lt;/h4&gt;&lt;p&gt;学linux最初的各种命令是看的网课。那几个明明运用及理解都不难的命令，反反复复讲了好长时间，白白浪费了不少时间。我感觉看书来学习linux的各种命令更高效，这本书整体节奏不错，难度感觉略高一点，但认着看，感觉看的很舒服，收货很多。勉强算适合小白吧，我感觉还是有一些对新手不怎么友好的点。&lt;/p&gt;
&lt;p&gt;（这本书学习笔记参见）&lt;/p&gt;
    
    </summary>
    
    
      <category term="读书" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>linux之centos学习笔记</title>
    <link href="http://yoursite.com/2019/07/28/linux%E4%B9%8Bcentos%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/07/28/linux之centos学习笔记/</id>
    <published>2019-07-28T14:06:43.000Z</published>
    <updated>2019-08-01T12:20:34.685Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><hr><h5 id="文件和目录管理"><a href="#文件和目录管理" class="headerlink" title="文件和目录管理"></a>文件和目录管理</h5><p><strong>绝对路径与相对路径</strong>：区别在于是否从根目录开始，本地绝对路径更稳定，服务器端用相对路径</p><p><strong>cd</strong></p><p><code>cd 路径</code>   . 当前目录 .. 上级目录</p><p>什么都不加默认跳转到当前用户根目录下<br>只能跳转到目录，不可以跳转到文件，会报错</p><p><strong>mkdir</strong></p><p>-m   指定文件权限，不常用<br>-p    创建一串级联目录，已存在时不报错 </p><a id="more"></a><p><strong>ls</strong></p><p>-l    详细信息<br>-d    查看指定目录属性<br>-h    人性化显示大小</p><p>ll=ls -l</p><p><strong>rmdir</strong>  不常用，仅用于删除目录</p><p>-p    级联删除，如果目录非空时报错</p><p><strong>rm</strong></p><p>-r    删除目录时必须加<br>-f    强制删除，不再询问是否删除</p><p><strong>PATH变量</strong></p><p>一串用：分隔的路径，执行命令时会默认从PATH中找<br>修改:    PATH=$PATH:新路径</p><p><strong>cp 【选项】 【源文件】 【目标文件】</strong></p><p>-r    复制目录时加<br>-i    安全选项，覆盖时会询问，默认alise cp=“cp -i”</p><p><strong>mv 【选项】 【源文件或目录】 【目标文件或目录】</strong></p><p>目标文件是目录，若存在，则将源文件或目录移动到目标目录下；若不存在，则将原目录重命名为给定文件名<br>目标文件是文件，若存在，则询问是否覆盖，若不存在，则将源文件重命名为给定的目标文件</p><p><strong>cat</strong></p><p>-n    显示行号<br>-A    显示所有内容，包括特殊字符</p><p><strong>tac</strong>    与命令tac一样，倒叙查看</p><p><strong>more    文件内容较多时使用</strong></p><p>Ctrl+D    向上翻屏<br>Ctrl+F    向下翻屏，同空格<br>空格    向下翻屏<br>q    退出<br>/字符串    从当前行向下查找字符串，按n定位下一个<br>？字符串    从当前行向上查找字符串，按n定位下一个（可以使用通配符）</p><p><strong>less    作用同more，但命令更多</strong></p><p>j    向上移动一行<br>k    向上移动</p><p><strong>head</strong>    默认显示文件前十行</p><p>-n 1/-n1/-1    显示指定行数，三种方式皆可</p><p><strong>tail</strong>    同head，倒叙查看</p><p><strong>文件属性</strong></p><ul><li>第一列<pre><code>第一位  d    目录  -    普通文件      l    链接文件      b    块设备      c    串行端口设备文件      s    套接字文件，socket</code></pre>  后九位<br>  每三位为一组，分别为user，group，others权限<br>  最后一位<br>  使用了SElinux context为点<br>  设置了acl属性为+号</li><li>第二列<br>  该文件占用的节点（inode），有几种访问方式</li><li>第三列<br>  所有者</li><li>第四列<br>  所属组</li><li>第五列<br>  该文件大小    </li><li>第六七八列<br>  分别为月日及时间</li><li>第九列<br>  文件名</li></ul><p><strong>chgrp</strong>    不常用<br>更改文件所属组<br>chgrp 【组名】 【文件名】<br>-R    级联更改子目录名或文件名</p><p><strong>chown</strong><br>更改文件所有者<br>chown 【-R】 账户名：组名    文件名<br>-R    仅用于目录，作用是级联更改</p><p><strong>chmod</strong><br>更改用户权限，目录默认为755，文件默认为644<br>chmod  750  文件或目录名<br>chmod  u=rwx，og=rw  文件或目录名   u，g，o，a（all）<br>chmod  a-x  文件或目录名</p><p><strong>umask</strong><br>修改文件默认权限<br>umask  xxx    xxx=默认值-所需默认值（文件默认为666，目录默认为777）<br>特例：666-333=444（333代表去了可写和可执行权限，但本来就没有可执行）</p><p><strong>chattr</strong><br>修改文件特殊属性<br>chattr 【+-=】【Asaci】 【文件或目录名】  分别是增加，减少和设定<br><strong><em>存疑：=还不清楚</em></strong><br>-A    文件或目录的atime将不可修改<br>-s    将数据同步写入磁盘<br>-a    只能追加不能删除，非root不可设定该属性（常用）<br>-c    自动压缩文件，读取时自动解压<br>-i    文件不能删除，重命名，设定链接，以及写入数据（常用）</p><p><strong>lsattr  文件或目录名</strong><br>该命令用于读取文件或者目录的特殊权限<br>-a    列出所有文件，包括隐藏文件<br>-R    连同子目录数据列出</p><p><strong>set uid，set gid，sticky bit</strong><br>权限其实共四位，第一位由这三个决定，分别为4,2,1，具体表现在第三位，若为小写则原本有x，大写则无，例如rwsrwsrwt为7777<br>set uid    针对二进制可执行文件，使文件在执行阶段拥有该文件所有者权限    passwd命令<br>set gid    作用在二进制文件上时，同上，作用在目录上时，任何用户在此目录下创建的文件都具有和该目录所属组相同的组<br>sticky bit    设置该权限后，就算用户拥有写权限，也只可以添加而不可删除文件    /tmp/</p><h5 id="在linux下搜索文件"><a href="#在linux下搜索文件" class="headerlink" title="在linux下搜索文件"></a>在linux下搜索文件</h5><p><strong>which</strong><br>查找可执行文件绝对路径<br>which vi</p><p><strong>whereis</strong><br>通过预先生成的文件列表库查找<br>whereis 【-bms】 【文件名称】<br>-b    只查找二级制文件<br>-m    只查找帮助文件<br>-s    只查找源代码文件</p><p><strong>locate</strong>    不常用<br>类似于whereis，包含所搜索关键词的目录和文件都会列出，所以不适合精确搜索</p><p><strong>find    重要</strong><br>find 【路径】 【参数】<br>-atime +n/-n    访问或执行时间大于或小于n天<br>-ctime +n/-n    写入、更改inode属性的时间大于或小于n天<br>-mtime +n/-n    写入时间大于或小于n天        <strong>用得最多</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h4 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h4&gt;&lt;hr&gt;
&lt;h5 id=&quot;文件和目录管理&quot;&gt;&lt;a href=&quot;#文件和目录管理&quot; class=&quot;headerlink&quot; title=&quot;文件和目录管理&quot;&gt;&lt;/a&gt;文件和目录管理&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;绝对路径与相对路径&lt;/strong&gt;：区别在于是否从根目录开始，本地绝对路径更稳定，服务器端用相对路径&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;cd&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd 路径&lt;/code&gt;   . 当前目录 .. 上级目录&lt;/p&gt;
&lt;p&gt;什么都不加默认跳转到当前用户根目录下&lt;br&gt;只能跳转到目录，不可以跳转到文件，会报错&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;mkdir&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;-m   指定文件权限，不常用&lt;br&gt;-p    创建一串级联目录，已存在时不报错 &lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>出现过的小问题</title>
    <link href="http://yoursite.com/2019/07/26/%E5%87%BA%E7%8E%B0%E8%BF%87%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/07/26/出现过的小问题/</id>
    <published>2019-07-26T05:49:44.000Z</published>
    <updated>2019-08-01T12:15:50.471Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="与git相关"><a href="#与git相关" class="headerlink" title="与git相关"></a>与git相关</h3><p>​    fatal: Not a git repository (or any of the parent directories): .git</p><p>​    <code>git init</code></p><p>​    生成子项目</p><p>​    <code>git submodule add 项目路径  文件路径</code></p><h3 id="与hexo相关"><a href="#与hexo相关" class="headerlink" title="与hexo相关"></a>与hexo相关</h3><p>常用命令</p><p>​    清楚缓存   <code>hexo clean</code></p><p>​    本地检测   <code>hexo s</code>   (-p 4001   指定端口，默认4000)  （–debug检测）</p><p>​    生成静态文件   <code>hexo g</code>（-w 监视文件变动）</p><p>​    部署   <code>hexo d</code></p><p>​    (<code>hexo clean &amp;&amp; hexo g -d</code>)</p><h3 id="与Markdown相关"><a href="#与Markdown相关" class="headerlink" title="与Markdown相关"></a>与Markdown相关</h3><ul><li>感觉没有光标移动很不舒服，暂时没找到解决办法</li><li>默认开启了拼写检查，很多编程的英文下面都是红线，很难受</li></ul><p>文件 -&gt; 偏好设置，下拉就可以找到钱拼写检查</p><p><img src="/.com//img/%E6%8B%BC%E5%86%99%E6%A3%80%E6%9F%A5.JPG" alt="拼写检查"></p><ul><li><p>不喜欢默认主题的可以在偏好设置中获取主题</p><p><img src="/.com//img/typora%E4%B8%BB%E9%A2%98.JPG" alt="typora themes"></p><p>选择自己喜欢的点击download，会给出css源码（有时也会直接给一个压缩文件），自己ctrl A,ctrl C存为一个css文件，导入主题文件夹即可</p><p>（从偏好设置中打开主题文件夹，导入即可）</p></li></ul><p>与intellij IDEA相关</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;与git相关&quot;&gt;&lt;a href=&quot;#与git相关&quot; class=&quot;headerlink&quot; title=&quot;与git相关&quot;&gt;&lt;/a&gt;与git相关&lt;/h3&gt;&lt;p&gt;​    fatal: Not a git repository (or any 
      
    
    </summary>
    
    
      <category term="编程" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="bug" scheme="http://yoursite.com/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>学英语路上的点点滴滴.md</title>
    <link href="http://yoursite.com/2019/07/25/%E5%AD%A6%E8%8B%B1%E8%AF%AD%E8%B7%AF%E4%B8%8A%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"/>
    <id>http://yoursite.com/2019/07/25/学英语路上的点点滴滴/</id>
    <published>2019-07-25T12:53:37.000Z</published>
    <updated>2019-07-27T10:20:51.971Z</updated>
    
    <content type="html"><![CDATA[<h3 id="短句"><a href="#短句" class="headerlink" title="短句"></a>短句</h3><p>scissors,paper,stone    剪刀石头布</p><p>iron my clothes  熨衣服</p><p>I started off for a interview   我动身去参加面试</p><p>She needs to move out,find her first job,meet the love of her life,maybe even get married</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;短句&quot;&gt;&lt;a href=&quot;#短句&quot; class=&quot;headerlink&quot; title=&quot;短句&quot;&gt;&lt;/a&gt;短句&lt;/h3&gt;&lt;p&gt;scissors,paper,stone    剪刀石头布&lt;/p&gt;
&lt;p&gt;iron my clothes  熨衣服&lt;/p&gt;
&lt;p&gt;I sta
      
    
    </summary>
    
    
      <category term="英语" scheme="http://yoursite.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>汇编基础</title>
    <link href="http://yoursite.com/2019/07/21/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2019/07/21/汇编基础/</id>
    <published>2019-07-21T03:08:24.000Z</published>
    <updated>2019-08-01T12:15:56.582Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><ul><li><p>直接在硬件工作，与机器语言一一对应</p></li><li><p>机器语言   01010000   本质：电平脉冲（早期通过穿孔卡片是实现）    push ax</p><p>难以阅读且易错</p></li><li><p>汇编语言主体是汇编指令，相当于机器指令的助记符</p></li><li><p>程序–&gt;  汇编指令  –&gt;  编译器–&gt;  机器码  –&gt;  计算机</p></li><li><blockquote><p>汇编语言包括</p><blockquote><p>汇编指令（机器码的助记符）<strong>核心</strong></p><p>伪指令（由编译器执行）</p><p>其他符号（由编译器执行）</p></blockquote></blockquote></li></ul><a id="more"></a><hr><ul><li>CPU：控制计算机运作并进行运算  <strong>核心部件</strong></li><li>内存：存储数据，不常用的置于磁盘中</li><li></li></ul><h3 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h3><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li>小甲鱼零基础汇编</li><li>汇编语言基础教程</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;直接在硬件工作，与机器语言一一对应&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;机器语言   01010000   本质：电平脉冲（早期通过穿孔卡片是实现）    push ax&lt;/p&gt;
&lt;p&gt;难以阅读且易错&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;汇编语言主体是汇编指令，相当于机器指令的助记符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;程序–&amp;gt;  汇编指令  –&amp;gt;  编译器–&amp;gt;  机器码  –&amp;gt;  计算机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;汇编语言包括&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;汇编指令（机器码的助记符）&lt;strong&gt;核心&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;伪指令（由编译器执行）&lt;/p&gt;
&lt;p&gt;其他符号（由编译器执行）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="汇编" scheme="http://yoursite.com/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
</feed>
